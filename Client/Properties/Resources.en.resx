<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Windows.Forms" name="System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" />
  <data name="avatar_0" type="System.Resources.ResXFileRef, System.Windows.Forms">
    <value>..\Resources\images\avatars\avatar_0.png;System.Drawing.Bitmap, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a</value>
  </data>
  <data name="CODE_INPUT_MENU_CODE_TOO_LONG" xml:space="preserve">
    <value>Code too long!</value>
  </data>
  <data name="CODE_INPUT_MENU_CODE_TOO_SHORT" xml:space="preserve">
    <value>Code too short!</value>
  </data>
  <data name="CODE_INPUT_MENU_INVALID_CODE" xml:space="preserve">
    <value>Invalid code</value>
  </data>
  <data name="COMMON_ACCEPT_BUTTON" xml:space="preserve">
    <value>Accept</value>
  </data>
  <data name="COMMON_BACK_BUTTON" xml:space="preserve">
    <value>Back</value>
  </data>
  <data name="COMMON_CANCEL_BUTTON" xml:space="preserve">
    <value>Cancel</value>
  </data>
  <data name="COMMON_CODE_LABEL" xml:space="preserve">
    <value>CODE</value>
  </data>
  <data name="COMMON_EMAIL_LABEL" xml:space="preserve">
    <value>EMAIL</value>
  </data>
  <data name="COMMON_EMPTY" xml:space="preserve">
    <value>Empty</value>
  </data>
  <data name="COMMON_FRIENDS" xml:space="preserve">
    <value>Friends</value>
  </data>
  <data name="COMMON_INVALID_CHARACTERS_LABEL" xml:space="preserve">
    <value>Invalid characters</value>
  </data>
  <data name="COMMON_LANGUAGE_ENGLISH" xml:space="preserve">
    <value>English</value>
  </data>
  <data name="COMMON_LANGUAGE_SPANISH" xml:space="preserve">
    <value>Spanish</value>
  </data>
  <data name="COMMON_LOADING" xml:space="preserve">
    <value>Loading...</value>
  </data>
  <data name="COMMON_NICKNAME_LABEL" xml:space="preserve">
    <value>NICKNAME</value>
  </data>
  <data name="COMMON_PASSWORD_LABEL" xml:space="preserve">
    <value>PASSWORD</value>
  </data>
  <data name="COMMON_PLEASE_WAIT" xml:space="preserve">
    <value>Please wait...</value>
  </data>
  <data name="COMMON_REJECT_BUTTON" xml:space="preserve">
    <value>Reject</value>
  </data>
  <data name="COMMON_REQUIRED_LABEL" xml:space="preserve">
    <value>Required*</value>
  </data>
  <data name="COMMON_UNKNOWN_ERROR" xml:space="preserve">
    <value>Unknown error :(</value>
  </data>
  <data name="FRIENDS_LIST_ADD_BUTTON" xml:space="preserve">
    <value>➕ Add</value>
  </data>
  <data name="FRIENDS_LIST_FRIEND_REQUEST_ALREADY_FRIENDS" xml:space="preserve">
    <value>You are already friends!</value>
  </data>
  <data name="FRIENDS_LIST_FRIEND_REQUEST_AUTOREQUEST" xml:space="preserve">
    <value>Are you going to send a request to yourself?</value>
  </data>
  <data name="FRIENDS_LIST_FRIEND_REQUEST_PENDING" xml:space="preserve">
    <value>You already have a pending friend request!</value>
  </data>
  <data name="FRIENDS_LIST_FRIEND_REQUEST_PLAYER_DOES_NOT_EXISTS" xml:space="preserve">
    <value>Player does not exists!</value>
  </data>
  <data name="FRIENDS_LIST_FRIEND_REQUEST_SUCCESS" xml:space="preserve">
    <value>Friend request sent!</value>
  </data>
  <data name="FRIENDS_LIST_HEADER" xml:space="preserve">
    <value>Friends list</value>
  </data>
  <data name="FRIENDS_LIST_STATUS_IN_GAME" xml:space="preserve">
    <value>In game</value>
  </data>
  <data name="FRIENDS_LIST_STATUS_OFFLINE" xml:space="preserve">
    <value>Offline</value>
  </data>
  <data name="FRIENDS_LIST_STATUS_ONLINE" xml:space="preserve">
    <value>Online</value>
  </data>
  <data name="FRIENDS_LIST_STATUS_PENDING" xml:space="preserve">
    <value>Pending</value>
  </data>
  <data name="LOGIN_INCORRECT_PASSWORD_MESSAGE" xml:space="preserve">
    <value>Incorrect password</value>
  </data>
  <data name="LOGIN_INVALID_CREDENTIALS_MESSAGE" xml:space="preserve">
    <value>Invalid credentials</value>
  </data>
  <data name="LOGIN_MENU_DUPLICATE_SESSION_MESSAGE" xml:space="preserve">
    <value>Another login was detected.</value>
  </data>
  <data name="LOGIN_MENU_HEADER" xml:space="preserve">
    <value>Log in to Scrabble</value>
  </data>
  <data name="LOGIN_MENU_LOGIN_AS_GUEST_BUTTON" xml:space="preserve">
    <value>Login as guest</value>
  </data>
  <data name="LOGIN_MENU_LOGIN_BUTTON" xml:space="preserve">
    <value>Log in</value>
  </data>
  <data name="LOGIN_MENU_REGISTER_BUTTON" xml:space="preserve">
    <value>Sign up</value>
  </data>
  <data name="LOGIN_MENU_SERVER_SHUTDOWN_MESSAGE" xml:space="preserve">
    <value>Server shutdown.</value>
  </data>
  <data name="LOGIN_MENU_USER_NOT_VERIFIED" xml:space="preserve">
    <value>User not verified</value>
  </data>
  <data name="MAIN_MENU_EXIT_BUTTON" xml:space="preserve">
    <value>EXIT</value>
  </data>
  <data name="MAIN_MENU_PLAY_BUTTON" xml:space="preserve">
    <value>PLAY</value>
  </data>
  <data name="MAIN_MENU_SETTINGS_BUTTON" xml:space="preserve">
    <value>SETTINGS</value>
  </data>
  <data name="PARTY_CHAT_LEADER_TRANSFER_MESSAGE_FORMAT" xml:space="preserve">
    <value>{0} is now the party leader</value>
  </data>
  <data name="PARTY_CHAT_MESSAGE_FORMAT" xml:space="preserve">
    <value>{0}: {1}</value>
  </data>
  <data name="PARTY_CHAT_PLAYER_JOIN_MESSAGE_FORMAT" xml:space="preserve">
    <value>{0} has joined the party.</value>
  </data>
  <data name="PARTY_CHAT_PLAYER_LEAVE_MESSAGE_FORMAT" xml:space="preserve">
    <value>{0} left the party.</value>
  </data>
  <data name="PARTY_CHAT_WHISPER_FORMAT" xml:space="preserve">
    <value>{0} -&gt; You: {1}</value>
  </data>
  <data name="PARTY_GAME_END_TURN_BUTTON" xml:space="preserve">
    <value>End turn</value>
  </data>
  <data name="PARTY_GAME_PASS_TURN_BUTTON" xml:space="preserve">
    <value>Pass turn</value>
  </data>
  <data name="PARTY_GAME_PLAYER_SCORE_LABEL_FORMAT" xml:space="preserve">
    <value>{0}'s score</value>
  </data>
  <data name="PARTY_GAME_PLAYER_TURN_FORMAT" xml:space="preserve">
    <value>{0}'s turn!</value>
  </data>
  <data name="PARTY_GAME_STATUS_HEADER" xml:space="preserve">
    <value>GAME STATUS</value>
  </data>
  <data name="PARTY_GAME_TILES_LEFT_LABEL" xml:space="preserve">
    <value>Tiles left</value>
  </data>
  <data name="PARTY_GAME_YOUR_TURN" xml:space="preserve">
    <value>Your turn!</value>
  </data>
  <data name="PARTY_INVITATION_TEXT" xml:space="preserve">
    <value>{0} invited you to play!</value>
  </data>
  <data name="PARTY_LOBBY_CHAT_INPUT_WATERMARK" xml:space="preserve">
    <value>Type something...</value>
  </data>
  <data name="PARTY_LOBBY_CHAT_LABEL" xml:space="preserve">
    <value>CHAT</value>
  </data>
  <data name="PARTY_LOBBY_FRIENDS_LABEL" xml:space="preserve">
    <value>FRIENDS</value>
  </data>
  <data name="PARTY_LOBBY_GAME_LANGUAGE_LABEL" xml:space="preserve">
    <value>Game language: </value>
  </data>
  <data name="PARTY_LOBBY_GAME_START_SUCCESS" xml:space="preserve">
    <value>Starting...</value>
  </data>
  <data name="PARTY_LOBBY_GROUP_LABEL" xml:space="preserve">
    <value>GROUP</value>
  </data>
  <data name="PARTY_LOBBY_HEADER" xml:space="preserve">
    <value>PARTY LOBBY</value>
  </data>
  <data name="PARTY_LOBBY_LEADER_LABEL" xml:space="preserve">
    <value>Leader</value>
  </data>
  <data name="PARTY_LOBBY_LOBBY_CODE_LABEL" xml:space="preserve">
    <value>Your lobby code is: </value>
  </data>
  <data name="PARTY_LOBBY_NOT_ENOUGH_PLAYERS" xml:space="preserve">
    <value>Not enough players to start game!</value>
  </data>
  <data name="PARTY_LOBBY_START_GAME_BUTTON" xml:space="preserve">
    <value>Start game</value>
  </data>
  <data name="PARTY_LOBBY_TIME_LIMIT_LABEL" xml:space="preserve">
    <value>Time limit: </value>
  </data>
  <data name="PARTY_LOBBY_WAITING_FOR_PLAYERS" xml:space="preserve">
    <value>Waiting for players...</value>
  </data>
  <data name="PLAYER_PROFILE_EDIT_BUTTON" xml:space="preserve">
    <value>✏ Edit</value>
  </data>
  <data name="PLAYER_PROFILE_HEADER" xml:space="preserve">
    <value>Player profile</value>
  </data>
  <data name="PLAY_MENU_BACK_BUTTON" xml:space="preserve">
    <value>BACK</value>
  </data>
  <data name="PLAY_MENU_INVITE_CODE_LABEL" xml:space="preserve">
    <value>Invite code</value>
  </data>
  <data name="PLAY_MENU_INVITE_CODE_MESSAGE" xml:space="preserve">
    <value>Introduce a valid invite code to join party.</value>
  </data>
  <data name="PLAY_MENU_JOIN_GAME_BUTTON" xml:space="preserve">
    <value>JOIN GAME</value>
  </data>
  <data name="PLAY_MENU_NEW_GAME_BUTTON" xml:space="preserve">
    <value>NEW GAME</value>
  </data>
  <data name="PLAY_MENU_PARTY_IS_FULL" xml:space="preserve">
    <value>Party is full!</value>
  </data>
  <data name="PLAY_MENU_PARTY_NOT_FOUND" xml:space="preserve">
    <value>Party not found!</value>
  </data>
  <data name="PROFILE_PROFILE_GAMES_COUNT_LABEL" xml:space="preserve">
    <value>Games played: </value>
  </data>
  <data name="PROFILE_PROFILE_REGISTERED_LABEL" xml:space="preserve">
    <value>Registered: </value>
  </data>
  <data name="PROFILE_PROFILE_WINS_COUNT_LABEL" xml:space="preserve">
    <value>Games won:</value>
  </data>
  <data name="SIGNUP_EMAIL_TOO_LONG" xml:space="preserve">
    <value>Email too long!</value>
  </data>
  <data name="SIGNUP_NICKNAME_TOO_LONG" xml:space="preserve">
    <value>Nickname too long!</value>
  </data>
  <data name="SIGNUP_NICKNAME_TOO_SHORT" xml:space="preserve">
    <value>Nickname too short!</value>
  </data>
  <data name="SIGNUP_PASSWORDS_DO_NOT_MATCH_LABEL" xml:space="preserve">
    <value>Passwords do not match</value>
  </data>
  <data name="SIGNUP_PASSWORD_NO_LOWERCASE" xml:space="preserve">
    <value>Password must contain at least one lowercase letter!</value>
  </data>
  <data name="SIGNUP_PASSWORD_NO_NUMBERS" xml:space="preserve">
    <value>Password must contain at least one number!</value>
  </data>
  <data name="SIGNUP_PASSWORD_NO_UPPERCASE" xml:space="preserve">
    <value>Password must contain at least one uppercase letter!</value>
  </data>
  <data name="SIGNUP_PASSWORD_TOO_LONG" xml:space="preserve">
    <value>Password too long!</value>
  </data>
  <data name="SIGNUP_PASSWORD_TOO_SHORT" xml:space="preserve">
    <value>Password too short!</value>
  </data>
  <data name="SIGN_UP_CONFIRM_PASSWORD_LABEL" xml:space="preserve">
    <value>CONFIRM PASSWORD</value>
  </data>
  <data name="SIGN_UP_HEADER" xml:space="preserve">
    <value>Sign up for Scrabble</value>
  </data>
  <data name="SIGN_UP_INVALID_EMAIL_LABEL" xml:space="preserve">
    <value>Invalid email</value>
  </data>
  <data name="SIGN_UP_MENU_VERIFICATION_CODE_LABEL" xml:space="preserve">
    <value>Verification code</value>
  </data>
  <data name="SIGN_UP_MENU_VERIFICATION_CODE_MESSAGE" xml:space="preserve">
    <value>We've sent the verification code to your email</value>
  </data>
  <data name="SIGN_UP_USER_ALREADY_EXISTS_MESSAGE" xml:space="preserve">
    <value>User already exists</value>
  </data>
</root>